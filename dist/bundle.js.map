{"version":3,"sources":["webpack://ht-typography.css/./js/optionsList.js","webpack://ht-typography.css/./js/mainForm.js","webpack://ht-typography.css/./js/customizeForm.js","webpack://ht-typography.css/./js/button.js","webpack://ht-typography.css/./js/switchMode.js","webpack://ht-typography.css/./js/main.js"],"names":["OptionsList","text","value","valueH","valueP","UI","options","getList","map","item","addOptionToList","setSelected","document","getElementById","add","Option","selected","ele","val","classList","getClassList","selectedStyle","getSelected","remove","CustomizeForm","addCustomizeOptions","selectHeader","selectParagraph","optionListHeaders","optionListParagraphs","classListHeader","classListHeader2","classListParagraph","isCustomize","ButtonEvent","beforeName","afterName","custBtn","innerHTML","goBackPresets","label","select","selectedIndex","changeClassHeader","changeClassParagraph","toggle","content","style","display","changeToggleBtn","isSwitched","SwitchEvent","nightBg","dayTxt","switchMode","changeTextColor","custText","body","backgroundColor","color","addEventListener","displayOptions","changePreset","displayCustomizeOptions","custBtnClicked","switchClicked"],"mappings":"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","file":"bundle.js","sourcesContent":["export default class OptionsList{\r\n  constructor(){}\r\n  // get Option List\r\n  static getList(){\r\n    const storedOptions = [{\r\n        text: 'general',\r\n        value: 'general',\r\n        valueH: 'general_header',\r\n        valueP: 'general_paragraph'\r\n      },\r\n      {\r\n        text: 'high-end',\r\n        value: 'high-end',\r\n        valueH: 'high-end_header',\r\n        valueP: 'high-end_paragraph'\r\n      },\r\n      {\r\n        text: 'modern',\r\n        value: 'modern',\r\n        valueH: 'modern_header',\r\n        valueP: 'modern_paragraph'\r\n      },\r\n      {\r\n        text: 'start-up',\r\n        value: 'start-up',\r\n        valueH: 'start-up_header',\r\n        valueP: 'start-up_paragraph'\r\n      },\r\n      {\r\n        text: 'elegant',\r\n        value: 'elegant',\r\n        valueH: 'elegant_header',\r\n        valueP: 'elegant_paragraph'\r\n      },\r\n      {\r\n        text: 'attention',\r\n        value: 'attention',\r\n        valueH: 'attention_header',\r\n        valueP: 'attention_paragraph'\r\n      },\r\n      {\r\n        text: 'medieval',\r\n        value: 'medieval',\r\n        valueH: 'medieval_header',\r\n        valueP: 'medieval_paragraph'\r\n      },\r\n      {\r\n        text: 'art',\r\n        value: 'art',\r\n        valueH: 'art_header',\r\n        valueP: 'art_paragraph'\r\n      },\r\n    ];\r\n    return storedOptions;\r\n  }\r\n}","import OptionsList from './optionsList.js' ;\r\n\r\nexport default class UI {\r\n  // display options to the UI\r\n  static displayOptions() {\r\n    // tempo store for options\r\n    const options = OptionsList.getList();\r\n\r\n    // add items to the select options\r\n    options.map(item => UI.addOptionToList(item));\r\n\r\n    // set initial value match the select option\r\n    UI.setSelected('sample-text', options[0].value);\r\n  }\r\n  // add items to options List\r\n  static addOptionToList(item) {\r\n    const select = document.getElementById('select-preset');\r\n    const list = select.options;\r\n    list.add(new Option(item.text, item.value, item.selected))\r\n  }\r\n\r\n  // apply option[class] to a class byid\r\n  static setSelected(ele, val){\r\n    return document.getElementById(ele).classList.add(val)\r\n  };\r\n\r\n  // get a class list from id\r\n  static getClassList(ele) {\r\n    return document.getElementById(ele).classList;\r\n  }\r\n\r\n  // get current selected style\r\n  static getSelected(ele) {\r\n    return document.getElementById(ele).value;\r\n  }\r\n\r\n  // change preset\r\n  static changePreset(){\r\n    const classList = UI.getClassList('sample-text');\r\n    const selectedStyle = UI.getSelected('select-preset');\r\n    classList.remove(classList[1]);\r\n    classList.add(selectedStyle);\r\n  }\r\n}\r\n","import OptionsList from './optionsList.js';\r\nimport UI from './mainForm';\r\n\r\nexport default class CustomizeForm{\r\n  /*\r\n  *Mapping values to customize options\r\n  *self invoke\r\n  */\r\n  static displayCustomizeOptions(){\r\n    const options = OptionsList.getList();\r\n    options.map(item => CustomizeForm.addCustomizeOptions(item));\r\n  }\r\n  // add options to customize list\r\n  static addCustomizeOptions(item) {\r\n    const selectHeader = document.getElementById('select-header');\r\n    const selectParagraph = document.getElementById('select-paragraph');\r\n\r\n    const optionListHeaders = selectHeader.options;\r\n    const optionListParagraphs = selectParagraph.options;\r\n    optionListHeaders.add(new Option(item.text, item.valueH, item.selected));\r\n    optionListParagraphs.add(new Option(item.text, item.valueP, item.selected));\r\n  }\r\n  /*\r\n  * Change the elements separately\r\n  * change the class for headers only\r\n  */\r\n  static changeClassHeader() {\r\n    const classListHeader = UI.getClassList('sample-h1');\r\n    const classListHeader2 = UI.getClassList('sample-h2');\r\n    const selectedStyle = UI.getSelected('select-header');\r\n\r\n    // Check if a class exist, delete if yes\r\n    if(classListHeader[0] !== 'undefined') {\r\n      classListHeader.remove(classListHeader[0]);\r\n      classListHeader2.remove(classListHeader2[0]);\r\n    }\r\n    // Add style class for headers\r\n    classListHeader.add(selectedStyle);\r\n    classListHeader2.add(selectedStyle);\r\n  };\r\n\r\n  // Change the class for paragraphs only\r\n  static changeClassParagraph() {\r\n    const classListParagraph = UI.getClassList('sample-paragraph');\r\n    const selectedStyle = UI.getSelected('select-paragraph');\r\n\r\n    // Check if a class exist, delete if yes\r\n    if(classListParagraph[0] !== 'undefined') classListParagraph.remove(classListParagraph[0]);\r\n    // Add style class for paragraph\r\n    classListParagraph.add(selectedStyle);\r\n  };\r\n}\r\n\r\n","import CustomizeForm from './customizeForm.js';\r\nimport UI from './mainForm';\r\n\r\n// Control the html display on customize button\r\nlet isCustomize = false;\r\n\r\nexport default class ButtonEvent{\r\n    // Function to swapping names for toggle buttons\r\n    static changeToggleBtn(ele, beforeName, afterName){\r\n        // Change the Customize buttons when clicked\r\n        const custBtn = document.getElementById(ele);\r\n\r\n        if(!isCustomize){\r\n        isCustomize = true;\r\n        custBtn.innerHTML = afterName;\r\n        }\r\n        else{\r\n        isCustomize = false;\r\n        custBtn.innerHTML = beforeName;\r\n        ButtonEvent.goBackPresets();\r\n        }\r\n    };\r\n\r\n    // Function to clean up optimize optons and switch back to preset options\r\n    static goBackPresets(){\r\n        const classListHeader = UI.getClassList('sample-h1');\r\n        const classListHeader2 = UI.getClassList('sample-h2');\r\n        const classListParagraph = UI.getClassList('sample-paragraph');\r\n        const classList = UI.getClassList('sample-text');\r\n        // Removing customized option\r\n        if(classListHeader[0] !== 'undefined') {\r\n        classListHeader.remove(classListHeader[0]);\r\n        classListHeader2.remove(classListHeader2[0]);\r\n        }\r\n        if(classList[0] !== 'undefined') classList.remove(classList[1]);\r\n        if(classListParagraph[0] !== 'undefined') classListParagraph.remove(classListParagraph[0]);\r\n        // Switch to presets\r\n        //changeClass();\r\n    };\r\n    // Add event to button for collapsible\r\n    static custBtnClicked(){\r\n        const label = document.getElementById('label');\r\n        const selectHeader = document.getElementById('select-header');\r\n        const selectParagraph = document.getElementById('select-paragraph');\r\n\r\n        // Get class list for the customize buttons\r\n        const custBtn = UI.getClassList('customizeBtn');\r\n\r\n        /*\r\n        * Get the current selected preset\r\n        * set start values for the two options\r\n        */\r\n        const select = document.getElementById('select-preset');\r\n        selectHeader.selectedIndex = select.selectedIndex;\r\n        selectParagraph.selectedIndex = select.selectedIndex;\r\n\r\n        // Check if preset class exist, delete if yes\r\n        const classList = UI.getClassList('sample-text');\r\n        if(classList[1] !== 'undefined') classList.remove(classList[1]);\r\n\r\n        CustomizeForm.changeClassHeader();\r\n        CustomizeForm.changeClassParagraph();\r\n\r\n        // Expand & collapise the element\r\n        custBtn.toggle('active');\r\n        const content = document.getElementById('content-panel');\r\n\r\n        /*\r\n        * If clicked show the preset elements\r\n        * hide the customize options\r\n        */\r\n        if (content.style.display === 'inline') {\r\n        content.style.display = 'none'; // The expand element\r\n        select.style.display = 'flex'; // The preset element\r\n        label.style.display = 'flex'; // The label for preset element\r\n        }\r\n\r\n        /*\r\n        * Hide the preset elements\r\n        * show the customize options\r\n        */\r\n        else {\r\n        content.style.display = 'inline';\r\n        select.style.display = 'none';\r\n        label.style.display = 'none';\r\n        }\r\n        ButtonEvent.changeToggleBtn('customizeBtn', 'customize', 'preset');\r\n    };\r\n}\r\n","let isSwitched = false;\r\nexport default class SwitchEvent{\r\n  // When switch toggle is click\r\n  static switchClicked() {\r\n    const nightBg = '#141c29';\r\n    const nightTxt = 'white';\r\n    const nightTxtCust = '#00A8E8';\r\n    const dayBg = 'white';\r\n    const dayTxt = '#3b4351';\r\n    const dayTxtCust = '#007EA7';\r\n\r\n    if(!isSwitched){\r\n      SwitchEvent.switchMode(nightBg, nightTxt, nightTxtCust);\r\n      SwitchEvent.changeTextColor(nightBg);\r\n      isSwitched = true\r\n    }\r\n    else{\r\n      SwitchEvent.switchMode(dayBg, dayTxt, dayTxtCust);\r\n      SwitchEvent.changeTextColor(dayTxt);\r\n      isSwitched = false\r\n    }\r\n  }\r\n  // Switch to different mode\r\n  static switchMode(select, text, custText){\r\n    document.body.style.backgroundColor = select;\r\n    document.body.style.color = text;\r\n    document.getElementById('customizeBtn').style.color = custText;\r\n    document.getElementById('content-panel').style.backgroundColor = select;\r\n  }\r\n  // Change options text color\r\n  static changeTextColor(color){\r\n    document.getElementById('select-preset').style.color = color;\r\n    document.getElementById('select-header').style.color = color;\r\n    document.getElementById('select-paragraph').style.color = color;\r\n  }\r\n}\r\n","import UI from './mainForm';\r\nimport CustomizeForm from './customizeForm';\r\nimport ButtonEvent from './button';\r\nimport SwitchEvent from './switchMode';\r\n\r\n// Event: Display main preset options\r\ndocument.addEventListener('DOMContentLoaded', UI.displayOptions());\r\n\r\n// Change class based on selected preset\r\n// Event: listen to preset select changes\r\ndocument.getElementById('select-preset').addEventListener('change', () => UI.changePreset());\r\n\r\n//Event: load cust options\r\ndocument.addEventListener('DOMContentLoaded', () => CustomizeForm.displayCustomizeOptions());\r\n\r\n//Event: listen to Headers changes\r\ndocument.getElementById('select-header')\r\n        .addEventListener('change', () => CustomizeForm.changeClassHeader());\r\n\r\n//Event: listen to Paragraph changes\r\ndocument.getElementById('select-paragraph')\r\n        .addEventListener('change', () => CustomizeForm.changeClassParagraph());\r\n\r\n//Event: Customize button\r\ndocument.getElementById('customizeBtn').addEventListener('click', () => ButtonEvent.custBtnClicked());\r\n\r\n//Event: switch button - day/night mode\r\ndocument.getElementById('switch')\r\n        .addEventListener('input', () => SwitchEvent.switchClicked());\r\n\r\n"],"sourceRoot":""}